"use strict";
const vm = require("vm");
//#region 解析标准jsonp格式
/**
 * 解析jsonp
 * @param jsonp jsonp数据
 * @param callback jsonp指定的回调函数名称
 */
function parse(jsonp, callback) {
    const ctx = {
        result: null,
        [callback]: function (data) {
            ctx.result = data;
        }
    };
    vm.runInNewContext(jsonp, ctx);
    return ctx.result;
}
/**
 * 将数据序列化成jsonp格式
 * @param data 要序列化的数据
 * @param callback 回调函数的名称，默认为随机数
 */
function stringify(data, callback) {
    return `${callback}(${JSON.stringify(data)})`;
}
//#endregion
//#region 解析 变量格式
/**
 * 解析变量格式的jsonp
 * @param jsonp jsonp数据
 * @param varName 变量名称
 * @param isGlobal 是否是全局变量
 */
function parse_var(jsonp, varName, isGlobal) {
    if (isGlobal) {
        const ctx = { [varName]: null };
        vm.runInNewContext(jsonp, ctx);
        return ctx[varName];
    }
    else {
        const ctx = { result: null };
        vm.runInNewContext(`${jsonp}; result = ${varName}`, ctx);
        return ctx.result;
    }
}
/**
 * 将数据序列化成变量jsonp格式
 * @param data 要序列化的数据
 * @param varName 变量名称
 * @param isGlobal 是否是全局变量
 */
function stringify_var(data, varName, isGlobal) {
    return `${isGlobal ? '' : 'var '}${varName}=${JSON.stringify(data)}`;
}
module.exports = { parse, stringify, parse_var, stringify_var };

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx5QkFBeUI7QUFFekIscUJBQXFCO0FBRXJCOzs7O0dBSUc7QUFDSCxlQUFlLEtBQWEsRUFBRSxRQUFnQjtJQUMxQyxNQUFNLEdBQUcsR0FBRztRQUNSLE1BQU0sRUFBRSxJQUFXO1FBQ25CLENBQUMsUUFBUSxDQUFDLEVBQUUsVUFBVSxJQUFTO1lBQzNCLEdBQUcsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLENBQUM7S0FDSixDQUFDO0lBRUYsRUFBRSxDQUFDLGVBQWUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUM7QUFDdEIsQ0FBQztBQUVEOzs7O0dBSUc7QUFDSCxtQkFBbUIsSUFBUyxFQUFFLFFBQWdCO0lBQzFDLE1BQU0sQ0FBQyxHQUFHLFFBQVEsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7QUFDbEQsQ0FBQztBQUVELFlBQVk7QUFFWixpQkFBaUI7QUFFakI7Ozs7O0dBS0c7QUFDSCxtQkFBbUIsS0FBYSxFQUFFLE9BQWUsRUFBRSxRQUFpQjtJQUNoRSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ1gsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQVcsRUFBRSxDQUFDO1FBRXZDLEVBQUUsQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBRS9CLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ0osTUFBTSxHQUFHLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBVyxFQUFFLENBQUM7UUFFcEMsRUFBRSxDQUFDLGVBQWUsQ0FBQyxHQUFHLEtBQUssY0FBYyxPQUFPLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUV6RCxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztJQUN0QixDQUFDO0FBQ0wsQ0FBQztBQUVEOzs7OztHQUtHO0FBQ0gsdUJBQXVCLElBQVMsRUFBRSxPQUFlLEVBQUUsUUFBaUI7SUFDaEUsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxPQUFPLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO0FBQ3pFLENBQUM7QUFJRCxpQkFBUyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLGFBQWEsRUFBRSxDQUFDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdm0gZnJvbSAndm0nO1xyXG5cclxuLy8jcmVnaW9uIOino+aekOagh+WHhmpzb25w5qC85byPXHJcblxyXG4vKipcclxuICog6Kej5p6QanNvbnBcclxuICogQHBhcmFtIGpzb25wIGpzb25w5pWw5o2uXHJcbiAqIEBwYXJhbSBjYWxsYmFjayBqc29ucOaMh+WumueahOWbnuiwg+WHveaVsOWQjeensFxyXG4gKi9cclxuZnVuY3Rpb24gcGFyc2UoanNvbnA6IHN0cmluZywgY2FsbGJhY2s6IHN0cmluZykge1xyXG4gICAgY29uc3QgY3R4ID0ge1xyXG4gICAgICAgIHJlc3VsdDogbnVsbCBhcyBhbnksXHJcbiAgICAgICAgW2NhbGxiYWNrXTogZnVuY3Rpb24gKGRhdGE6IGFueSkge1xyXG4gICAgICAgICAgICBjdHgucmVzdWx0ID0gZGF0YTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHZtLnJ1bkluTmV3Q29udGV4dChqc29ucCwgY3R4KTtcclxuXHJcbiAgICByZXR1cm4gY3R4LnJlc3VsdDtcclxufVxyXG5cclxuLyoqXHJcbiAqIOWwhuaVsOaNruW6j+WIl+WMluaIkGpzb25w5qC85byPXHJcbiAqIEBwYXJhbSBkYXRhIOimgeW6j+WIl+WMlueahOaVsOaNrlxyXG4gKiBAcGFyYW0gY2FsbGJhY2sg5Zue6LCD5Ye95pWw55qE5ZCN56ew77yM6buY6K6k5Li66ZqP5py65pWwXHJcbiAqL1xyXG5mdW5jdGlvbiBzdHJpbmdpZnkoZGF0YTogYW55LCBjYWxsYmFjazogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gYCR7Y2FsbGJhY2t9KCR7SlNPTi5zdHJpbmdpZnkoZGF0YSl9KWA7XHJcbn1cclxuXHJcbi8vI2VuZHJlZ2lvblxyXG5cclxuLy8jcmVnaW9uIOino+aekCDlj5jph4/moLzlvI9cclxuXHJcbi8qKlxyXG4gKiDop6PmnpDlj5jph4/moLzlvI/nmoRqc29ucFxyXG4gKiBAcGFyYW0ganNvbnAganNvbnDmlbDmja5cclxuICogQHBhcmFtIHZhck5hbWUg5Y+Y6YeP5ZCN56ewXHJcbiAqIEBwYXJhbSBpc0dsb2JhbCDmmK/lkKbmmK/lhajlsYDlj5jph49cclxuICovXHJcbmZ1bmN0aW9uIHBhcnNlX3Zhcihqc29ucDogc3RyaW5nLCB2YXJOYW1lOiBzdHJpbmcsIGlzR2xvYmFsOiBib29sZWFuKSB7XHJcbiAgICBpZiAoaXNHbG9iYWwpIHtcclxuICAgICAgICBjb25zdCBjdHggPSB7IFt2YXJOYW1lXTogbnVsbCBhcyBhbnkgfTtcclxuXHJcbiAgICAgICAgdm0ucnVuSW5OZXdDb250ZXh0KGpzb25wLCBjdHgpO1xyXG5cclxuICAgICAgICByZXR1cm4gY3R4W3Zhck5hbWVdO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCBjdHggPSB7IHJlc3VsdDogbnVsbCBhcyBhbnkgfTtcclxuXHJcbiAgICAgICAgdm0ucnVuSW5OZXdDb250ZXh0KGAke2pzb25wfTsgcmVzdWx0ID0gJHt2YXJOYW1lfWAsIGN0eCk7XHJcblxyXG4gICAgICAgIHJldHVybiBjdHgucmVzdWx0O1xyXG4gICAgfVxyXG59XHJcblxyXG4vKipcclxuICog5bCG5pWw5o2u5bqP5YiX5YyW5oiQ5Y+Y6YePanNvbnDmoLzlvI9cclxuICogQHBhcmFtIGRhdGEg6KaB5bqP5YiX5YyW55qE5pWw5o2uXHJcbiAqIEBwYXJhbSB2YXJOYW1lIOWPmOmHj+WQjeensFxyXG4gKiBAcGFyYW0gaXNHbG9iYWwg5piv5ZCm5piv5YWo5bGA5Y+Y6YePXHJcbiAqL1xyXG5mdW5jdGlvbiBzdHJpbmdpZnlfdmFyKGRhdGE6IGFueSwgdmFyTmFtZTogc3RyaW5nLCBpc0dsb2JhbDogYm9vbGVhbikge1xyXG4gICAgcmV0dXJuIGAke2lzR2xvYmFsID8gJycgOiAndmFyICd9JHt2YXJOYW1lfT0ke0pTT04uc3RyaW5naWZ5KGRhdGEpfWA7XHJcbn1cclxuXHJcbi8vI2VuZHJlZ2lvblxyXG5cclxuZXhwb3J0ID0geyBwYXJzZSwgc3RyaW5naWZ5LCBwYXJzZV92YXIsIHN0cmluZ2lmeV92YXIgfTsiXX0=
